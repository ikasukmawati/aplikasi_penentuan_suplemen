/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package spk_suplemen_balita_saw;

import java.awt.Frame;
import java.util.List;
import javax.swing.table.DefaultTableModel;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;

/**
 *
 * @author 
 */
public class SPK extends javax.swing.JFrame {

    /**
     * Creates new form SPK
     */
    public SPK() {
        initComponents();

        setLocationRelativeTo(null);
        setExtendedState(Frame.MAXIMIZED_BOTH);
        loadKriteria();
        loadAlternatif();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKriteria = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBLaLTERNATIF = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        hasilnormalisasi = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        hasilPembobotan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SPK");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SAW Method");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(794, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.setBackground(new java.awt.Color(0, 255, 0));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jPanel13.setBackground(new java.awt.Color(153, 153, 153));

        jButton3.setText("Tambah Kriteria");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblKriteria.setAutoCreateRowSorter(true);
        tblKriteria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKriteria);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE))
                .addGap(28, 28, 28))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data Kriteria");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kriteria", jPanel3);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jPanel7.setPreferredSize(new java.awt.Dimension(873, 50));

        jButton4.setText("TAMBAH DATA ");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        TBLaLTERNATIF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TBLaLTERNATIF);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Data Alternatif");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Alternatif", jPanel4);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setPreferredSize(new java.awt.Dimension(873, 50));

        jButton2.setText("Lakukan Normalisasi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(867, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        hasilnormalisasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(hasilnormalisasi);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
            .addComponent(jScrollPane5)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Normalisasi", jPanel9);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        jPanel8.setPreferredSize(new java.awt.Dimension(873, 50));

        jButton1.setText("Lakukan Pembobotan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(853, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        hasilPembobotan.setAutoCreateRowSorter(true);
        hasilPembobotan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(hasilPembobotan);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane3)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pembobotan", jPanel5);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTrans2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTrans2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonTrans2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        TambahKriteria tambah = new TambahKriteria();
        tambah.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        TambahAlternatif tambah = new TambahAlternatif();
        tambah.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        normalisasi();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SPK_SAW();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SPK().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TBLaLTERNATIF;
    private javax.swing.JTable hasilPembobotan;
    private javax.swing.JTable hasilnormalisasi;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblKriteria;
    // End of variables declaration//GEN-END:variables

    private void loadKriteria() {
        try {
            Object[][] data = null;
            Object[] header = {"ID", "KEY", "BOBOT", "KETERANGAN"};
            DefaultTableModel model = new DefaultTableModel(data, header);
            tblKriteria.setModel(model);

            //load data from DB
            Connection koneksi = Koneksi.konekKeDB();
            Statement st = koneksi.createStatement();
            String query = "SELECT * FROM bobots";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) { //mengundang nama tabel
                int id = rs.getInt("id");
                String nama = rs.getString("key");
                String bobot = rs.getString("bobot");
                String label = rs.getString("keterangan");
                Object[] d = {id, nama, bobot, label};
                model.addRow(d);
            }
        } catch (Exception e) {

        }
    }

    private void loadAlternatif() {
        try {
            Object[][] data = null;
            Object[] header = {"ID", "NAMA", "HARGA", "BERAT", "JUMLAH VIT A", "JUMLAH VIT B", "JUMLAH VIT C"};
            DefaultTableModel model = new DefaultTableModel(data, header);
            TBLaLTERNATIF.setModel(model);

            //load data from DB
            Connection koneksi = Koneksi.konekKeDB();
            Statement st = koneksi.createStatement();
            String query = "SELECT * FROM suplemens";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                int id = rs.getInt("id");
                String nama = rs.getString("nama");
                String harga = rs.getString("harga");
                String berat = rs.getString("berat");
                String jml_vitamin_a = rs.getString("jml_vitamin_a");
                String jml_vitamin_b = rs.getString("jml_vitamin_b");
                String jml_vitamin_c = rs.getString("jml_vitamin_c");

                Object[] d = {id, nama, harga, berat, jml_vitamin_a, jml_vitamin_b, jml_vitamin_c};
                model.addRow(d);
            }
        } catch (Exception e) {

        }
    }

    private void SPK_SAW() {
        try {
            //List<Double> hasil_saw = new ArrayList<>();
            Object[] header = {"NO","SUPLEMENS","BOBOT"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, header);
            hasilPembobotan.setModel(model); 
            int nomor = 0;
            
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM suplemens";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                double harga = rs.getDouble("harga");
                double berat = rs.getDouble("berat");
                double jml_vitamin_a = rs.getInt("jml_vitamin_a");
                double jml_vitamin_b = rs.getInt("jml_vitamin_b");
                double jml_vitamin_c = rs.getInt("jml_vitamin_c");

                double pembagi_harga = label("c1").equals("cost") ? min("harga") : max("harga");
                double pembagi_berat = label("c2").equals("cost") ? min("berat") : max("berat");
                double pembagi_vitamin_a = label("c3").equals("cost") ? min("jml_vitamin_a") : max("jml_vitamin_a");
                double pembagi_vitamin_b = label("c4").equals("cost") ? min("jml_vitamin_b") : max("jml_vitamin_b");
                double pembagi_vitamin_c = label("c5").equals("cost") ? min("jml_vitamin_c") : max("jml_vitamin_c");

                double norm_harga = label("c1").equals("cost") ? min("harga") / harga : harga / max("harga");
                double norm_berat = label("c2").equals("cost") ? min("berat") / berat : berat / max("berat");
                double norm_vitamin_a = label("c3").equals("cost") ? min("jml_vitamin_a") / jml_vitamin_a : jml_vitamin_a / max("jml_vitamin_a");
                double norm_vitamin_b = label("c4").equals("cost") ? min("jml_vitamin_b") / jml_vitamin_b : jml_vitamin_b / max("jml_vitamin_b");
                double norm_vitamin_c = label("c5").equals("cost") ? min("jml_vitamin_c") / jml_vitamin_c : jml_vitamin_c / max("jml_vitamin_c");

//                System.out.println(bobot("c1"));
//                System.out.println(bobot("c2"));
//                System.out.println(bobot("c3"));
//                System.out.println(bobot("c4"));
//                System.out.println(bobot("c5"));
                
                double hasil = (bobot("c1")*norm_harga)+(bobot("c2")*norm_berat)+(bobot("c3")*norm_vitamin_a)+(bobot("c4")*norm_vitamin_b)+(bobot("c5")*norm_vitamin_c);
                //hasil_saw.add(hasil);   
                nomor++;
                
                String nama_alt = rs.getString("nama");
                Object[] rowData = {nomor, nama_alt, hasil};
                model.addRow(rowData); 
                
            }
            //double max = Collections.max(hasil_saw);
            //System.out.println(max);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    private void normalisasi(){
        try {
            Object[] header = {"NO","NAMA","HARGA", "BERAT", "Vitamin A", "VITAMIN B", "VITAMIN C"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data, header);
            hasilnormalisasi.setModel(model); 
            int nomor = 0;

            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT * FROM suplemens";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                double harga = rs.getDouble("harga");
                double berat = rs.getDouble("berat");
                double jml_vitamin_a = rs.getInt("jml_vitamin_a");
                double jml_vitamin_b = rs.getInt("jml_vitamin_b");
                double jml_vitamin_c = rs.getInt("jml_vitamin_c");

                double pembagi_harga = label("c1").equals("cost") ? min("harga") : max("harga");
                double pembagi_berat = label("c2").equals("cost") ? min("berat") : max("berat");
                double pembagi_vitamin_a = label("c3").equals("cost") ? min("jml_vitamin_a") : max("jml_vitamin_a");
                double pembagi_vitamin_b = label("c4").equals("cost") ? min("jml_vitamin_b") : max("jml_vitamin_b");
                double pembagi_vitamin_c = label("c5").equals("cost") ? min("jml_vitamin_c") : max("jml_vitamin_c");

                double norm_harga = label("c1").equals("cost") ? min("harga") / harga : harga / max("harga");
                double norm_berat = label("c2").equals("cost") ? min("berat") / berat : berat / max("berat");
                double norm_vitamin_a = label("c3").equals("cost") ? min("jml_vitamin_a") / jml_vitamin_a : jml_vitamin_a / max("jml_vitamin_a");
                double norm_vitamin_b = label("c4").equals("cost") ? min("jml_vitamin_b") / jml_vitamin_b : jml_vitamin_b / max("jml_vitamin_b");
                double norm_vitamin_c = label("c5").equals("cost") ? min("jml_vitamin_c") / jml_vitamin_c : jml_vitamin_c / max("jml_vitamin_c");
                             
                nomor++;
                
                String nama_alt = rs.getString("nama");
                Object[] rowData = {nomor, nama_alt, norm_harga, norm_berat, norm_vitamin_a, norm_vitamin_b, norm_vitamin_c};
                model.addRow(rowData); 
                
            }
                     
        } catch(Exception e){
            System.out.println(e);
        }
    }

    private double min(String kolom) {
        double min = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT MIN(" + kolom + ") AS min_kolom FROM suplemens";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                min = rs.getInt("min_kolom");
            }
            return min;

        } catch (SQLException e) {
        }
        return min;
    }

    private double max(String kolom) {
        double max = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT MAX(" + kolom + ") AS max_kolom FROM suplemens";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                max = rs.getInt("max_kolom");
            }
            return max;

        } catch (SQLException e) {
        }
        return max;
    }

    private String label(String kolom) {
        String label = "cost";
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT keterangan FROM `bobots` WHERE  `key` ='" + kolom + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                label = rs.getString("keterangan");
            }
            return label;

        } catch (SQLException e) {
        }
        return label;
    }

    private double bobot(String kolom) {
        double bobot = 0;
        try {
            Connection c = Koneksi.konekKeDB();
            Statement st = c.createStatement();
            String query = "SELECT bobot FROM `bobots` WHERE  `key` ='" + kolom + "'";
            ResultSet rs = st.executeQuery(query);
            while (rs.next()) {
                bobot = rs.getDouble("bobot");
            }
            return bobot;

        } catch (SQLException e) {
        }
        return bobot;
    }

}
